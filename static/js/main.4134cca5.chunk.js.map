{"version":3,"sources":["api/unsplash.js","components/SearchBar.js","components/ImageCard.js","components/ImageList.js","components/App.js","index.js"],"names":["axios","create","baseURL","headers","Authorization","SearchBar","state","term","onFormSubmit","event","preventDefault","props","onSubmit","className","this","action","htmlFor","type","value","onChange","e","setState","target","Component","ImageCard","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","React","createRef","addEventListener","image","description","urls","style","gridRowEnd","ref","src","regular","alt","ImageList","images","map","key","id","App","onSearchSubmit","a","unsplash","get","params","query","response","data","results","marginTop","ReactDOM","render","document","querySelector"],"mappings":"qQAIeA,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,2BACTC,QAAS,CACPC,cACE,gFCsBSC,E,2MA3BbC,MAAQ,CAAEC,KAAM,I,EAEhBC,aAAe,SAAAC,GACbA,EAAMC,iBACN,EAAKC,MAAMC,SAAS,EAAKN,MAAMC,O,wEAGvB,IAAD,OACP,OACE,yBAAKM,UAAU,cACb,0BAAMD,SAAUE,KAAKN,aAAcK,UAAU,UAAUE,OAAO,IAC5D,yBAAKF,UAAU,SACb,2BAAOG,QAAQ,IAAf,gBACA,2BACEC,KAAK,OACLC,MAAOJ,KAAKR,MAAMC,KAClBY,SAAU,SAAAC,GACR,EAAKC,SAAS,CAAEd,KAAMa,EAAEE,OAAOJ,kB,GAlBvBK,aC6BTC,G,kBA5Bb,WAAYb,GAAQ,IAAD,8BACjB,4CAAMA,KAURc,SAAW,WACT,IAAMC,EAAS,EAAKC,SAASC,QAAQC,aAE/BC,EAAQC,KAAKC,KAAKN,EAAS,IACjC,EAAKL,SAAS,CAAES,MAAOA,KAbvB,EAAKxB,MAAQ,CAAEwB,MAAO,GACtB,EAAKH,SAAWM,IAAMC,YAHL,E,iFAQjBpB,KAAKa,SAASC,QAAQO,iBAAiB,OAAQrB,KAAKW,Y,+BAU5C,IAAD,EACuBX,KAAKH,MAAMyB,MAAjCC,EADD,EACCA,YAAaC,EADd,EACcA,KACrB,OACE,yBAAKC,MAAO,CAAEC,WAAW,QAAD,OAAU1B,KAAKR,MAAMwB,SAC3C,yBAAKW,IAAK3B,KAAKa,SAAUe,IAAKJ,EAAKK,QAASC,IAAKP,S,GAvBjCd,cCUTsB,EARG,SAAAlC,GAChB,IAAMmC,EAASnC,EAAMmC,OAAOC,KAAI,SAAAX,GAC9B,OAAO,kBAAC,EAAD,CAAWY,IAAKZ,EAAMa,GAAIb,MAAOA,OAG1C,OAAO,yBAAKvB,UAAU,cAAciC,ICsBvBI,E,2MAzBb5C,MAAQ,CAAEwC,OAAQ,I,EAGlBK,e,uCAAiB,WAAM5C,GAAN,eAAA6C,EAAA,sEAKQC,EAASC,IAAI,iBAAkB,CACpDC,OAAQ,CAAEC,MAAOjD,KANJ,OAKTkD,EALS,OASf,EAAKpC,SAAS,CAAEyB,OAAQW,EAASC,KAAKC,UATvB,2C,8HAaf,OACE,yBAAK9C,UAAU,eAAe0B,MAAO,CAAEqB,UAAW,SAChD,kBAAC,EAAD,CAAWhD,SAAUE,KAAKqC,iBAC1B,kBAAC,EAAD,CAAWL,OAAQhC,KAAKR,MAAMwC,c,GApBpBb,IAAMV,WCDxBsC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.4134cca5.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n// create() makes instance of axios client with default properties\r\n// customised copy to make requests to url with headers\r\nexport default axios.create({\r\n  baseURL: \"https://api.unsplash.com\",\r\n  headers: {\r\n    Authorization:\r\n      \"Client-ID bb1e619b1c6bfcffadc6b894f781cbcb22ace35d81a7be0c8e3fed2a7d0a11d3\"\r\n  }\r\n});\r\n","import React, { Component } from \"react\";\r\n\r\nclass SearchBar extends Component {\r\n  state = { term: \"\" };\r\n\r\n  onFormSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state.term);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ui segment\">\r\n        <form onSubmit={this.onFormSubmit} className=\"ui form\" action=\"\">\r\n          <div className=\"field\">\r\n            <label htmlFor=\"\">Image Search</label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.term}\r\n              onChange={e => {\r\n                this.setState({ term: e.target.value });\r\n              }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ImageCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { spans: 0 };\r\n    this.imageRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    //wait for the image to load to the DOM using eventlistener\r\n    this.imageRef.current.addEventListener(\"load\", this.setSpans);\r\n  }\r\n  //callback to the eventlistener that displays the img details when loaded\r\n  setSpans = () => {\r\n    const height = this.imageRef.current.clientHeight;\r\n\r\n    const spans = Math.ceil(height / 10);\r\n    this.setState({ spans: spans });\r\n  };\r\n\r\n  render() {\r\n    const { description, urls } = this.props.image;\r\n    return (\r\n      <div style={{ gridRowEnd: `span ${this.state.spans}` }}>\r\n        <img ref={this.imageRef} src={urls.regular} alt={description} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageCard;\r\n","import React from \"react\";\r\nimport \"./ImageList.css\";\r\nimport ImageCard from \"./ImageCard\";\r\n\r\nconst ImageList = props => {\r\n  const images = props.images.map(image => {\r\n    return <ImageCard key={image.id} image={image} />;\r\n  });\r\n\r\n  return <div className=\"image-list\">{images}</div>;\r\n};\r\n\r\nexport default ImageList;\r\n","import React from \"react\";\r\nimport unsplash from \"../api/unsplash\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport ImageList from \"./ImageList\";\r\n\r\nclass App extends React.Component {\r\n  state = { images: [] };\r\n\r\n  //async await syntax\r\n  onSearchSubmit = async term => {\r\n    //UNSPLASH axios create function\r\n    // get function takes two arguements,\r\n    // 1 - Address we want to make a get request to.\r\n    // 2 - Object we use to customise request\r\n    const response = await unsplash.get(\"/search/photos\", {\r\n      params: { query: term }\r\n    });\r\n\r\n    this.setState({ images: response.data.results });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ui container\" style={{ marginTop: \"10px\" }}>\r\n        <SearchBar onSubmit={this.onSearchSubmit} />\r\n        <ImageList images={this.state.images} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}